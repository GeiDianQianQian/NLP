## Evaluation - Project - CMPT 825 & CMPT 413

> This README file constains information about the taks performed by `tmosharr` on the Final Project.
The description of the model used, approaches made, and further analysis are documented in a separate file. You can learn more about the evaluation methodology taken in this project by viewing project.pdf located in the answer folder.

### Instructions on how to run:

To begin with, followings must be installed to render the score
	- Python 2.7
	- NLTK
	- NLTK Data
	- Keras library
	- Tensorflow

Run the "evaluator.py" located in the evaluator folder.

-----------------------------------------------------------------------------------
$ python evaluator.py
-----------------------------------------------------------------------------------

"feat_train.csv" and "feat_test.csv" files will be autimatically created within the folder, containing the feature vector values.
Next step is to use the neural network to create output.
Run "deep_learning.py" with an additional command to save the output values.
"deep_learning.py" will take "feat_train.csv" and "feat_test.csv" by default.

-----------------------------------------------------------------------------------
$ python deep_learning.py > output
-----------------------------------------------------------------------------------

The output file will be created within the folder, containing the list of values of either -1, 0, or 1.
Before testing the score, you can run "check.py" to check the output. If there are any errors, "check.py" will report.

-----------------------------------------------------------------------------------
$ python check.py < output
-----------------------------------------------------------------------------------

Final step is to compare the result with the result of human annotator.

-----------------------------------------------------------------------------------
$ python score-evaluation.py < output
-----------------------------------------------------------------------------------

"score-evaluation.py" will provide the compared scores along with the accuracy of the output.



### Turash Mosharraf - tmosharr

- Setup of GitLab project by commiting initial files
- Implemented the Baseline
- Improved the baseline by various ways
	- Implemented customized ROSE with 27 features
	- Implemented learning method using neural network with keras library
- Bug fixes
- Writing documentation for the report



### Log

| Date | Author | Message | Abbreviated Hash |
| Thu Dec 7 06:49:37 2017 -0900 | tmosharr | Merge branch 'master' of https://csil-git1.cs.surrey.sfu.ca/lperesde/nlpclass-1777-pixel | 3bc3d95 |
| Thu Dec 7 06:48:44 2017 -0900 | tmosharr | Implemented Customized version of ROSE with 27 features, weights are optimized using Neural Network | be57ad5 |
| Wed Dec 6 09:37:29 2017 -0900 | tmosharr | Merge branch 'master' of https://csil-git1.cs.surrey.sfu.ca/lperesde/nlpclass-1777-pixel | d4b9513 |
| Wed Dec 6 09:36:40 2017 -0900 | tmosharr | improved upto 0.555, trying to add parts of speech tagging | fde8b5f |
| Sat Dec 2 16:28:49 2017 -0900 | tmosharr | Merge branch 'master' of https://csil-git1.cs.surrey.sfu.ca/lperesde/nlpclass-1777-pixel | cd2583c |
| Sat Dec 2 16:27:54 2017 -0900 | tmosharr | mateor and bleu | 6aacb82 |
| Thu Nov 30 09:29:50 2017 -0900 | tmosharr | implemented baseline for evaluator | 3417678 |
